<?xml version="1.0" encoding="UTF-8"?>
<!--<configuration scan="true">-->
    <!--<contextName>MovieBooking</contextName>-->
    <!--<timestamp key="TIMESTAMP" datePattern="yyyy-MM-dd" />-->
    <!--<property name="LOGPATH" value="log" />-->
    <!--&lt;!&ndash; 输出到控制台 &ndash;&gt;-->
    <!--<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">-->
        <!--<layout class="ch.qos.logback.classic.PatternLayout">-->
            <!--<pattern>-->
                <!--%d{HH:mm:ss.SSS} [%thread] %-5level %logger{40} - %msg%n-->
            <!--</pattern>-->
        <!--</layout>-->
    <!--</appender>-->

    <!--&lt;!&ndash; 输出到文件 &ndash;&gt;-->
    <!--<appender name="fileLog"-->
              <!--class="ch.qos.logback.core.rolling.RollingFileAppender">-->
        <!--<file>${LOGPATH}${file.separator}${TIMESTAMP}.log</file>-->
        <!--<append>true</append>-->
        <!--<encoder>-->
            <!--<pattern>-->
                <!--%d{HH:mm:ss.SSS} [%thread] %-5level %logger{40} - %msg%n-->
            <!--</pattern>-->
        <!--</encoder>-->
        <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
            <!--<fileNamePattern>${LOGPATH}${file.separator}all${file.separator}%d{yyyy-MM-dd}.log</fileNamePattern>-->
            <!--<maxHistory>30</maxHistory>-->
        <!--</rollingPolicy>-->
        <!--<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">-->
            <!--<MaxFileSize>10MB</MaxFileSize>-->
        <!--</triggeringPolicy>-->
    <!--</appender>-->

    <!--<root level="INFO">-->
        <!--<appender-ref ref="fileLog" />-->
        <!--<appender-ref ref="stdout"  />-->
    <!--</root>-->
<!--</configuration>-->



<configuration debug="true">
<!-- 项目名称 -->
<property name="PROJECT_NAME" value="SpringBoot" />

<!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
<property name="LOG_HOME" value="Logs" />

<!-- 控制台输出 -->
<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
    <withJansi>true</withJansi>
    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
        <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
        <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] %highlight([%-5level] %logger{50} - %msg%n)</pattern>
        <charset>UTF-8</charset>
    </encoder>
</appender>

<!-- 系统错误日志文件 -->
<appender name="SYSTEM_FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 过滤器，只打印ERROR级别的日志 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
        <level>ERROR</level>
        <onMatch>ACCEPT</onMatch>
        <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
        <!--日志文件输出的文件名-->
        <FileNamePattern>${LOG_HOME}/${PROJECT_NAME}-system_error-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
        <!--日志文件保留天数-->
        <MaxHistory>15</MaxHistory>
        <!--日志文件最大的大小-->
        <MaxFileSize>10MB</MaxFileSize>
    </rollingPolicy>

    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
        <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
        <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] [%-5level] %logger{50} - %msg%n</pattern>
        <charset>UTF-8</charset>
    </encoder>
</appender>
<logger name="system_error" additivity="true">
    <appender-ref ref="SYSTEM_FILE"/>
</logger>

<!-- 自己打印的日志文件，用于记录重要日志信息 -->
<appender name="MY_INFO_FILE"  class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- 过滤器，只打印ERROR级别的日志 -->
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
        <level>INFO</level>
        <onMatch>ACCEPT</onMatch>
        <onMismatch>DENY</onMismatch>
    </filter>
    <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
        <!--日志文件输出的文件名-->
        <FileNamePattern>${LOG_HOME}/${PROJECT_NAME}-my_info-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
        <!--日志文件保留天数-->
        <MaxHistory>15</MaxHistory>
        <!--日志文件最大的大小-->
        <MaxFileSize>10MB</MaxFileSize>
    </rollingPolicy>

    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
        <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
        <pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%thread] [%-5level] %logger{50} - %msg%n</pattern>
        <charset>UTF-8</charset>
    </encoder>
</appender>
<logger name="my_info" additivity="true">
    <appender-ref ref="MY_INFO_FILE"/>
</logger>

<!-- 开发环境下的日志配置 -->
<springProfile name="dev">
    <root level="INFO">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="SYSTEM_FILE" />
    </root>
</springProfile>

<!-- 生产环境下的日志配置 -->
<springProfile name="prod">
    <root level="INFO">
        <appender-ref ref="SYSTEM_FILE" />
    </root>
</springProfile>
</configuration>





<!--<configuration scan="true">-->
<!--&lt;!&ndash;定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径&ndash;&gt;-->
<!--<property name="LOG_NAME" value="/home"></property>-->
<!--&lt;!&ndash; %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名,,,, &ndash;&gt;-->
<!--<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">-->
    <!--<encoder>-->
        <!--&lt;!&ndash;<pattern>%d %p (%file:%line\)- %m%n</pattern>&ndash;&gt;-->
        <!--&lt;!&ndash;格式化输出：%d:表示日期    %thread:表示线程名     %-5level:级别从左显示5个字符宽度  %msg:日志消息    %n:是换行符&ndash;&gt;-->
        <!--<pattern>1-%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger - %msg%n</pattern>-->
        <!--<charset>GBK</charset>-->
    <!--</encoder>-->
<!--</appender>-->
<!--&lt;!&ndash;<include resource="org/springframework/cloud/logging/logback/base.xml"/>&ndash;&gt;-->
<!--<contextName>RestAPI</contextName>-->
<!--<property name="LOG_PATH" value=".logs"/>-->
<!--&lt;!&ndash;设置系统日志目录&ndash;&gt;-->
<!--<property name="APPDIR" value="app"/>-->
<!--&lt;!&ndash;-->
      <!--说明：-->
      <!--1、日志级别及文件-->
          <!--日志记录采用分级记录，级别与日志文件名相对应，不同级别的日志信息记录到不同的日志文件中-->
          <!--例如：error级别记录到log_error_xxx.log或log_error.log（该文件为当前记录的日志文件），而log_error_xxx.log为归档日志，-->
          <!--日志文件按日期记录，同一天内，若日志文件大小等于或大于2M，则按0、1、2...顺序分别命名-->
          <!--例如log-level-2013-12-21.0.log-->
          <!--其它级别的日志也是如此。-->
      <!--2、文件路径-->
          <!--若开发、测试用，在Eclipse中运行项目，则到Eclipse的安装路径查找logs文件夹，以相对路径../logs。-->
          <!--若部署到Tomcat下，则在Tomcat下的logs文件中-->
      <!--3、Appender-->
          <!--FILEERROR对应error级别，文件名以log-error-xxx.log形式命名-->
          <!--FILEWARN对应warn级别，文件名以log-warn-xxx.log形式命名-->
          <!--FILEINFO对应info级别，文件名以log-info-xxx.log形式命名-->
          <!--FILEDEBUG对应debug级别，文件名以log-debug-xxx.log形式命名-->
          <!--CONSOLE将日志信息输出到控制上，为方便开发测试使用-->
   <!--&ndash;&gt;-->
<!--&lt;!&ndash; 日志记录器，日期滚动记录 &ndash;&gt;-->
<!--<appender name="FILEERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--&lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
    <!--<file>${LOG_PATH}/${APPDIR}/log_error.log</file>-->
    <!--&lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
    <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
        <!--&lt;!&ndash; 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
        <!--而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
        <!--<fileNamePattern>${LOG_PATH}/${APPDIR}/error/log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
        <!--&lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，-->
        <!--命名日志文件，例如log-error-2013-12-21.0.log &ndash;&gt;-->
        <!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
            <!--<maxFileSize>2MB</maxFileSize>-->
        <!--</timeBasedFileNamingAndTriggeringPolicy>-->
    <!--</rollingPolicy>-->
    <!--&lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
    <!--<append>true</append>-->
    <!--&lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
    <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
        <!--<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>-->
        <!--<charset>utf-8</charset>-->
    <!--</encoder>-->
    <!--&lt;!&ndash; 此日志文件只记录info级别的 &ndash;&gt;-->
    <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
        <!--<level>error</level>-->
        <!--<onMatch>ACCEPT</onMatch>-->
        <!--<onMismatch>DENY</onMismatch>-->
    <!--</filter>-->
<!--</appender>-->

<!--&lt;!&ndash; 日志记录器，日期滚动记录 &ndash;&gt;-->
<!--<appender name="FILEWARN" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--&lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
    <!--<file>${LOG_PATH}/${APPDIR}/log_warn.log</file>-->
    <!--&lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
    <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
        <!--&lt;!&ndash; 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
        <!--而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
        <!--<fileNamePattern>${LOG_PATH}/${APPDIR}/warn/log-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
        <!--&lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，-->
        <!--命名日志文件，例如log-error-2013-12-21.0.log &ndash;&gt;-->
        <!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
            <!--<maxFileSize>2MB</maxFileSize>-->
        <!--</timeBasedFileNamingAndTriggeringPolicy>-->
    <!--</rollingPolicy>-->
    <!--&lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
    <!--<append>true</append>-->
    <!--&lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
    <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
        <!--<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>-->
        <!--<charset>utf-8</charset>-->
    <!--</encoder>-->
    <!--&lt;!&ndash; 此日志文件只记录info级别的 &ndash;&gt;-->
    <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
        <!--<level>warn</level>-->
        <!--<onMatch>ACCEPT</onMatch>-->
        <!--<onMismatch>DENY</onMismatch>-->
    <!--</filter>-->
<!--</appender>-->

<!--&lt;!&ndash; 日志记录器，日期滚动记录 &ndash;&gt;-->
<!--<appender name="FILEINFO" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
    <!--&lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
    <!--<file>${LOG_PATH}/${APPDIR}/log_info.log</file>-->
    <!--&lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
    <!--<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
        <!--&lt;!&ndash; 归档的日志文件的路径，例如今天是2013-12-21日志，当前写的日志文件路径为file节点指定，可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
        <!--而2013-12-21的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
        <!--<fileNamePattern>${LOG_PATH}/${APPDIR}/info/log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
        <!--&lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过2M，若超过2M，日志文件会以索引0开始，-->
        <!--命名日志文件，例如log-error-2013-12-21.0.log &ndash;&gt;-->
        <!--<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
            <!--<maxFileSize>2MB</maxFileSize>-->
        <!--</timeBasedFileNamingAndTriggeringPolicy>-->
    <!--</rollingPolicy>-->
    <!--&lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
    <!--<append>true</append>-->
    <!--&lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
    <!--<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
        <!--<pattern>===%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>-->
        <!--<charset>utf-8</charset>-->
    <!--</encoder>-->
    <!--&lt;!&ndash; 此日志文件只记录info级别的 &ndash;&gt;-->
    <!--<filter class="ch.qos.logback.classic.filter.LevelFilter">-->
        <!--<level>info</level>-->
        <!--<onMatch>ACCEPT</onMatch>-->
        <!--<onMismatch>DENY</onMismatch>-->
    <!--</filter>-->
<!--</appender>-->
<!--&lt;!&ndash;日志异步到数据库  &ndash;&gt;-->
<!--&lt;!&ndash;<appender name="DBAPPENDER" class="ch.qos.logback.classic.db.DBAppender">&ndash;&gt;-->
<!--&lt;!&ndash;<connectionSource class="ch.qos.logback.core.db.DataSourceConnectionSource">&ndash;&gt;-->
<!--&lt;!&ndash;<dataSource class="com.zaxxer.hikari.HikariDataSource">&ndash;&gt;-->
<!--&lt;!&ndash;<driverClassName>com.mysql.jdbc.Driver</driverClassName>&ndash;&gt;-->
<!--&lt;!&ndash;<jdbcUrl>jdbc:mysql://localhost:3306/albedo-new?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false</jdbcUrl>&ndash;&gt;-->
<!--&lt;!&ndash;<username>root</username>&ndash;&gt;-->
<!--&lt;!&ndash;<password>123456</password>&ndash;&gt;-->
<!--&lt;!&ndash;<poolName>HikariPool-logback</poolName>&ndash;&gt;-->
<!--&lt;!&ndash;</dataSource>&ndash;&gt;-->
<!--&lt;!&ndash;</connectionSource>&ndash;&gt;-->
<!--&lt;!&ndash;&lt;!&ndash; 此日志文件只记录info级别的 &ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;<filter class="ch.qos.logback.classic.filter.LevelFilter">&ndash;&gt;-->
<!--&lt;!&ndash;<level>warn</level>&ndash;&gt;-->
<!--&lt;!&ndash;<onMatch>ACCEPT</onMatch>&ndash;&gt;-->
<!--&lt;!&ndash;<onMismatch>DENY</onMismatch>&ndash;&gt;-->
<!--&lt;!&ndash;</filter>&ndash;&gt;-->
<!--&lt;!&ndash;&lt;!&ndash; 此日志文件只记录info级别的 &ndash;&gt;&ndash;&gt;-->
<!--&lt;!&ndash;<filter class="ch.qos.logback.classic.filter.LevelFilter">&ndash;&gt;-->
<!--&lt;!&ndash;<level>error</level>&ndash;&gt;-->
<!--&lt;!&ndash;<onMatch>ACCEPT</onMatch>&ndash;&gt;-->
<!--&lt;!&ndash;<onMismatch>DENY</onMismatch>&ndash;&gt;-->
<!--&lt;!&ndash;</filter>&ndash;&gt;-->
<!--&lt;!&ndash;</appender>&ndash;&gt;-->
<!--<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">-->
    <!--<encoder>-->
        <!--<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %logger Line:%-3L - %msg%n</pattern>-->
        <!--&lt;!&ndash;<charset>GBK</charset>&ndash;&gt;-->
    <!--</encoder>-->
<!--</appender>-->
<!--<logger name="com.minlia" level="DEBUG"/>-->
<!--<logger name="org.springframework.data.mybatis" level="DEBUG"/>-->
<!--<logger name="org.springframework.aop.aspectj" level="ERROR"/>-->

<!--<logger name="javax.activation" level="WARN"/>-->
<!--<logger name="javax.mail" level="WARN"/>-->
<!--<logger name="javax.xml.bind" level="WARN"/>-->
<!--<logger name="ch.qos.logback" level="INFO"/>-->
<!--<logger name="com.codahale.metrics" level="WARN"/>-->
<!--<logger name="com.ryantenney" level="WARN"/>-->
<!--<logger name="com.sun" level="WARN"/>-->
<!--<logger name="com.zaxxer" level="WARN"/>-->
<!--<logger name="io.undertow" level="WARN"/>-->
<!--<logger name="net.sf.ehcache" level="WARN"/>-->
<!--<logger name="org.apache" level="WARN"/>-->
<!--<logger name="org.apache.catalina.startup.DigesterFactory" level="OFF"/>-->
<!--<logger name="org.bson" level="WARN"/>-->
<!--<logger name="org.hibernate.validator" level="WARN"/>-->
<!--<logger name="org.hibernate" level="WARN"/>-->
<!--<logger name="org.hibernate.ejb.HibernatePersistence" level="OFF"/>-->
<!--<logger name="org.springframework.web" level="INFO"/>-->
<!--<logger name="org.springframework.security" level="WARN"/>-->
<!--<logger name="org.springframework.cache" level="WARN"/>-->
<!--<logger name="org.thymeleaf" level="WARN"/>-->
<!--<logger name="org.xnio" level="WARN"/>-->
<!--<logger name="springfox" level="WARN"/>-->
<!--<logger name="sun.rmi" level="WARN"/>-->
<!--<logger name="liquibase" level="WARN"/>-->
<!--<logger name="sun.rmi.transport" level="WARN"/>-->

<!--<logger name="jdbc.connection" level="ERROR"/>-->
<!--<logger name="jdbc.resultset" level="ERROR"/>-->
<!--<logger name="jdbc.resultsettable" level="INFO"/>-->
<!--<logger name="jdbc.audit" level="ERROR"/>-->
<!--<logger name="jdbc.sqltiming" level="ERROR"/>-->
<!--<logger name="jdbc.sqlonly" level="INFO"/>-->

<!--&lt;!&ndash;<contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">&ndash;&gt;-->
<!--&lt;!&ndash;<resetJUL>true</resetJUL>&ndash;&gt;-->
<!--&lt;!&ndash;</contextListener>&ndash;&gt;-->

<!--<springProfile name="production">-->
    <!--<root level="DEBUG">-->
        <!--&lt;!&ndash;<appender-ref ref="FILEERROR"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<appender-ref ref="FILEWARN"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<appender-ref ref="FILEINFO"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<appender-ref ref="DBAPPENDER"/>&ndash;&gt;-->
        <!--<appender-ref ref="STDOUT"/>-->

    <!--</root>-->
<!--</springProfile>-->


<!--<springProfile name="dev">-->
    <!--<root level="DEBUG">-->
        <!--&lt;!&ndash;<appender-ref ref="FILEERROR"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<appender-ref ref="FILEWARN"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<appender-ref ref="FILEINFO"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<appender-ref ref="DBAPPENDER"/>&ndash;&gt;-->
        <!--<appender-ref ref="CONSOLE"/>-->

    <!--</root>-->
<!--</springProfile>-->

<!--</configuration>-->